@model IEnumerable<CitraDataStore.Models.Agrodatos>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewBag.Title = "Agrodatos";
}




@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Content Header (Page header) -->
<header>
    <h1>
        Pagina de Inicio
    </h1>

    <meta name="viewport" content="width=device-width" />
    <!-- Geoblaze -->

    <script src="~/npmlib/chart.js/dist/Chart.bundle.js"></script>
    <script src="~/npmlib/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.js"></script>
    <script src="~/npmlib/hammerjs/hammer.js"></script>
    <script src="https://momentjs.com/downloads/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="https://cdn.jsdelivr.net/npm/promise-polyfill"></script>
</header>
<!-- Main content -->
<html>
<body>

    <!--Container de los graficos-->

    <div class="panel panel-primary">
        <div class="panel-heading">
            <strong class="panel-title">Grafico de datos disponibles</strong>

            <select id="select1g" name="select1g" class="form-control">
                <option>Selecionar una estación</option>
                @foreach (var item in Model)
                {
                    <option value=@Html.DisplayTextFor(modelItem => item.Id)> @Html.DisplayFor(modelItem => item.NombreEstacion)</option>
                }

            </select>

            <input type="date" id="fechaIg" name="fechaIg" class="form-control" placeholder="Fecha de inicio">
            <span class="help-block">Ingresar fecha de inicio</span>

            <input type="date" id="fechaTg" name="fechaTg" class="form-control" placeholder="Fecha de Termino">
            <span class="help-block">Ingresar fecha de Termino</span>

            <button type="submit" class="btn btn-success" id="graficar" onclick="dibujarGrafico()">
                <i class="fa fa-dot-circle-o"></i> Graficar
            </button>
        </div>

        <div class="panel-body">

            <canvas id="line-chart" width="800" height="450"></canvas>

        </div>

    </div>






    <h1>Descarga de datos Agroclimatologicos</h1>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".cd-example-modal-lg">Descargar Datos</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".cd-modal-lg">Descargar Et</button>
    <div class="row text-center" style="margin-top:100px">
        <img class="" src="~/dist/img/logo.png" />
    </div>

</body>
<!-- /.content -->







<div class="modal fade cd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="myModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">




            <div class="panel panel-primary">
                <div class="panel-heading">
                    <strong class="panel-title">Descarga de datos Agroclimatologicos</strong>

                </div>
                <div class="panel-body">


                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="select1">Estación</label>
                        <div class="col-md-9">
                            <select id="select1" name="select1" class="form-control">
                                <option>Selecionar una estación</option>
                                @foreach (var item in Model)
                                {
                                    <option value=@Html.DisplayTextFor(modelItem => item.Id)> @Html.DisplayFor(modelItem => item.NombreEstacion)</option>
                                }
                            </select>

                        </div>
                    </div>


                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="select2">Datos</label>
                        <div class="col-md-9">
                            <select id="select2" name="select2" class="form-control">
                                <option value="0">Elegir Opción</option>
                                <option value="1">Datos instantáeos</option>
                                <option value="2">Datos diarios</option>

                            </select>

                        </div>
                    </div>


                    <div class="form-group row">
                        <label class="col-md-3 col-form-label">Sensores Disponibles</label>
                        <div class="col-md-9 col-form-label" id="divSensorType">
                            <input class="form-control" type="text" placeholder="No se han encontrado sensores" readonly>
                            <!--Aqui van los checkbox en funcion de la esacion seleccionada
                            Son llamados en el script-->
                        </div>





                    </div>



                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="password-inputate-input">Fecha Desde</label>
                        <div class="col-md-9">
                            <input type="date" id="fecha1" name="fecha1" class="form-control" placeholder="Fecha">
                            <span class="help-block">Ingresar fecha de inicio</span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="password-inputate-input">Fecha Hasta</label>
                        <div class="col-md-9">
                            <input type="date" id="fecha2" name="fecha2" class="form-control" placeholder="Fecha">
                            <span class="help-block">Ingresar fecha de inicio</span>
                        </div>
                    </div>


                    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                        Opciónes Avanzadas
                    </button>

                    <div class="collapse" id="collapseExample">
                        <div class="panel panel-body">


                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select3">Separador de Datos</label>
                                <div class="col-md-9">
                                    <select id="select3" name="select3" class="form-control">
                                        <option value="1">Punto y Coma (Excel)</option>
                                        <option value="2">Coma (OpenOffice)</option>
                                        <option value="3">Tabulador</option>

                                    </select>

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select4">Separador de decimales</label>
                                <div class="col-md-9">
                                    <select id="select4" name="select4" class="form-control">
                                        <option value="1">Punto (en-US)</option>
                                        <option value="2">Coma (es-CL)</option>

                                    </select>

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select5">Separador de miles</label>
                                <div class="col-md-9">
                                    <select id="select5" name="select5" class="form-control">
                                        <option value="1">Sin separador</option>
                                        <option value="2">Punto</option>
                                        <option value="2">Coma</option>

                                    </select>

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select6">Máximo de filas</label>
                                <div class="col-md-9">
                                    <select id="select6" name="select6" class="form-control">
                                        <option value="1">65535 Excel 2003 y OpenOffice</option>
                                        <option value="2">1048576 Excel 2007</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel-footer">
                    <button type="submit" class="btn btn-success" id="Descargar" onclick="descargarDatos()">
                        <i class="fa fa-dot-circle-o"></i> Descargar
                    </button>

                </div>


            </div>
        </div>
    </div>
</div>

<div class="modal fade cd-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="myModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">




            <div class="panel panel-primary">
                <div class="panel-heading">
                    <strong class="panel-title">Descarga de Indicadores</strong>

                </div>
                <div class="panel-body">


                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="select11">Estación</label>
                        <div class="col-md-9">
                            <select id="select11" name="select11" class="form-control">
                                <option>Selecionar una estación</option>
                                @foreach (var item in Model)
                                {
                                    <option value=@Html.DisplayTextFor(modelItem => item.Id)> @Html.DisplayFor(modelItem => item.NombreEstacion)</option>
                                }
                            </select>

                        </div>
                    </div>


                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="select22">Datos</label>
                        <div class="col-md-9">
                            <select id="select22" name="select22" class="form-control">
                                <option value="0">Elegir Opción</option>
                                <option value="1">Datos Instantáneos</option>
                                <option value="2">Datos diarios</option>

                            </select>

                        </div>
                    </div>


                    <div class="form-group row">
                        <label class="col-md-3 col-form-label">Indicadores Disponibles</label>
                        <div class="col-md-9 col-form-label" id="divIndicadores">
                            <form class="form-inline">

                                <input class="form-control" type="text" placeholder="No se han encontrado Indicadores" readonly>
                                <!--Aqui van los checkbox en funcion de la esacion seleccionada Son llamados en el script-->

                            </form>
                        </div>


                    </div>



                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="password-inputate-input">Fecha Desde</label>
                        <div class="col-md-9">
                            <input type="date" id="fecha11" name="fecha11" class="form-control" placeholder="Fecha">
                            <span class="help-block">Ingresar fecha de inicio</span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 col-form-label" for="password-inputate-input">Fecha Hasta</label>
                        <div class="col-md-9">
                            <input type="date" id="fecha22" name="fecha22" class="form-control" placeholder="Fecha">
                            <span class="help-block">Ingresar fecha de inicio</span>
                        </div>
                    </div>


                    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample2" aria-expanded="false" aria-controls="collapseExample">
                        Opciónes Avanzadas
                    </button>

                    <div class="collapse" id="collapseExample2">
                        <div class="panel panel-body">


                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select33">Separador de Datos</label>
                                <div class="col-md-9">
                                    <select id="select33" name="select33" class="form-control">
                                        <option value="1">Punto y Coma (Excel)</option>
                                        <option value="2">Coma (OpenOffice)</option>
                                        <option value="3">Tabulador</option>

                                    </select>

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select44">Separador de decimales</label>
                                <div class="col-md-9">
                                    <select id="select44" name="select44" class="form-control">
                                        <option value="1">Punto (en-US)</option>
                                        <option value="2">Coma (es-CL)</option>

                                    </select>

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select55">Separador de miles</label>
                                <div class="col-md-9">
                                    <select id="select55" name="select55" class="form-control">
                                        <option value="1">Sin separador</option>
                                        <option value="2">Punto</option>
                                        <option value="2">Coma</option>

                                    </select>

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="select66">Máximo de filas</label>
                                <div class="col-md-9">
                                    <select id="select66" name="select66" class="form-control">
                                        <option value="1">65535 Excel 2003 y OpenOffice</option>
                                        <option value="2">1048576 Excel 2007</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel-footer">
                    <button type="submit" class="btn btn-success" id="DescargarInd" onclick="descargarIndicadores()">
                        <i class="fa fa-dot-circle-o"></i> Descargar
                    </button>

                </div>


            </div>
        </div>
    </div>
</div>

</html>


<script type="text/javascript">

  // Funcion que captura los datos del formulario y envia una consulta a la BD para recuperar los datos en un archivo CSV
  function descargarIndicadores() {
      var estacion = document.getElementById("select11").value;
      var datos = document.getElementById("select22").value;
      var fechaI = document.getElementById("fecha11").value;
      var fechaT = document.getElementById("fecha22").value;
      //var sensores = $('#divIndicadores')[0];
      var separadorDatos = document.getElementById("select33").value;
      var separadorDecimales = document.getElementById("select44").value;
      var separadorMiles = document.getElementById("select55").value;

      var eta
      var gd
      var hf
      var eto
      if (datos == 1) { //datos instantaneos
          var eta = document.getElementById("check33").checked;
          $.ajax(
        {
          type: "POST",
          url: "@Url.Action("EnviarConsultaIndicadores", "AgroDatos")",
          data: {
            estacion: estacion,
            datos: datos,
            fechaI: fechaI,
            fechaT: fechaT,
            eta:eta,
            separadorDatos: separadorDatos,
            separadorDecimales: separadorDecimales,
            separadorMiles: separadorMiles,
          },

          error: function (jqXHR, exception) {
            var msg = '';
            if (jqXHR.status === 0) {
              msg = 'Not connect.\n Verify Network.';
            } else if (jqXHR.status == 404) {
              msg = 'Requested page not found. [404]';
            } else if (jqXHR.status == 500) {
              msg = 'Internal Server Error [500].';
            } else if (exception === 'parsererror') {
              msg = 'Requested JSON parse failed.';
            } else if (exception === 'timeout') {
              msg = 'Time out error.';
            } else if (exception === 'abort') {
              msg = 'Ajax request aborted.';
            } else {
              msg = 'Uncaught Error.\n' + jqXHR.responseText;
            }
            alert("error");
            console.log(msg);
          },

          //Crea un link para descargar el archivo CSV generado
          success:function (data, status) {
            console.log("success");
            var contentType = 'text/csv';
            var blob = new Blob([data], { type: contentType });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = "test.csv";
            link.textContent = "Descargar CSV";
            link.click();
            console.log("despues de la descarga");
            }
          })
      }
      else if (datos == 2) {
          var gd = document.getElementById("check00").checked;
          var hf = document.getElementById("check11").checked;
          var eto = document.getElementById("check22").checked;

          $.ajax(
        {
          type: "POST",
          url: "@Url.Action("EnviarConsultaIndicadores", "AgroDatos")",
          data: {
            estacion: estacion,
            datos: datos,
            fechaI: fechaI,
              fechaT: fechaT,
              gd: gd,
              hf: hf,
              eto: eto,
            separadorDatos: separadorDatos,
            separadorDecimales: separadorDecimales,
            separadorMiles: separadorMiles,
          },

          error: function (jqXHR, exception) {
            var msg = '';
            if (jqXHR.status === 0) {
              msg = 'Not connect.\n Verify Network.';
            } else if (jqXHR.status == 404) {
              msg = 'Requested page not found. [404]';
            } else if (jqXHR.status == 500) {
              msg = 'Internal Server Error [500].';
            } else if (exception === 'parsererror') {
              msg = 'Requested JSON parse failed.';
            } else if (exception === 'timeout') {
              msg = 'Time out error.';
            } else if (exception === 'abort') {
              msg = 'Ajax request aborted.';
            } else {
              msg = 'Uncaught Error.\n' + jqXHR.responseText;
            }
            alert("error");
            console.log(msg);
          },

          //Crea un link para descargar el archivo CSV generado
          success:function (data, status) {
            console.log("success");
            var contentType = 'text/csv';
            var blob = new Blob([data], { type: contentType });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = "test.csv";
            link.textContent = "Descargar CSV";
            link.click();
            console.log("despues de la descarga");
            }
          })
      }





      /*
      var childSize = sensores.childNodes.length;
      console.log("chldSize: " + childSize);
      var check = [];
      for (var i = 0; i < childSize; i++)
      {
        console.log("ChildValue: " + sensores.childNodes[i].childNodes[0].value);
        //console.log("asdf: " + sensores.childNodes[i].childNodes[0].checked);
        if (sensores.childNodes[i].childNodes[0].checked == false) {
          console.log("ChildValue no sel: " + sensores.childNodes[i].childNodes[0].value);
          check.push(sensores.childNodes[i].childNodes[0].value);
        }

        console.log("tamaño arreglo: " + check.length);
      }*/


    }


    function descargarDatos() {

        var estacion = document.getElementById("select1").value;
        var datos = document.getElementById("select2").value;
        var fechaI = document.getElementById("fecha1").value;
        var fechaT = document.getElementById("fecha2").value;
        var sensores = $('#divSensorType')[0];


        var separadorDatos = document.getElementById("select3").value;
        var separadorDecimales = document.getElementById("select4").value;
        var separadorMiles = document.getElementById("select5").value;

        var childSize = sensores.childNodes.length;
        console.log("chldSize: " + childSize);
        var check = [];
        for (var i = 0; i < childSize; i++)
        {
          console.log("ChildValue: " + sensores.childNodes[i].childNodes[0].value);
          //console.log("asdf: " + sensores.childNodes[i].childNodes[0].checked);
          if (sensores.childNodes[i].childNodes[0].checked == false) {
            console.log("ChildValue no sel: " + sensores.childNodes[i].childNodes[0].value);
            check.push(sensores.childNodes[i].childNodes[0].value);
          }

          console.log("tamaño arreglo: " + check.length);
        }

        $.ajax(
            {
              type: "POST",
              url: "@Url.Action("EnviarConsulta", "AgroDatos")",
              data: {
                estacion: estacion,
                datos: datos,
                fechaI: fechaI,
                fechaT: fechaT,
                separadorDatos: separadorDatos,
                separadorDecimales: separadorDecimales,
                separadorMiles: separadorMiles,
                check: check

              },

              error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                  msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 404) {
                  msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                  msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                  msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                  msg = 'Time out error.';
                } else if (exception === 'abort') {
                  msg = 'Ajax request aborted.';
                } else {
                  msg = 'Uncaught Error.\n' + jqXHR.responseText;
                }
                alert("error");
                console.log(msg);
              },

              //Crea un link para descargar el archivo CSV generado
              success:function (data, status) {
                console.log("success");
                var contentType = 'text/csv';
                var blob = new Blob([data], { type: contentType });
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = "test.csv";
                link.textContent = "Descargar CSV";
                link.click();
                console.log("despues de la descarga");
                }
              })

  }
</script>

<script>

  function obtenerDatos() {
    var estacion = document.getElementById("select1").value;
    var datos = document.getElementById("select2").value;
    var fechaI = document.getElementById("fecha1").value;
    var fechaT = document.getElementById("fecha2").value;
    var sensores = $('#divSensorType')[0];
    /*for (int i = 0; i < sensores.children.length; i++)
    {
      var child = sensores.children[i];
      console.log("Sensores: " + child);
    }*/




    console.log("Estacion: " + estacion);
    console.log("Datos: " + datos);
    console.log("Inicio: " + fechaI);
    console.log("Termino: " + fechaT);


    //OPCIONES AVANZADAS

    var separadorDatos = document.getElementById("select3").value;
    var separadorDecimal = document.getElementById("select4").value;
    var separadorMiles = document.getElementById("select5").value;
    var maxFilas = document.getElementById("select6").value;
    console.log("Sep datos: " + separadorDatos);
    console.log("Sep decimal: " + separadorDecimal);
    console.log("sep miles: " + separadorMiles);
    console.log("maxFila: " + maxFilas);


    }

    $('#select22').change(function () {

        var select2Value = document.getElementById("select22").value;
        if (select2Value == 2) {

            var indicadores = '<div class="col-md-9 col-form-label" id="divIndicadores">' +
                '<form class="form-inline">' +
                '<div class="form-group"><div class="custom-control custom-checkbox custom-control-inline">' +
                '<input class="custom-control-input" type="checkbox" value="0" id="check00">' +
                '<label class="custom-control-label" for="check00">Grados Dia</label></div></div>' +
                '<div class="form-group">' +
                '<div class="custom-control custom-checkbox custom-control-inline">' +
                '<input class="custom-control-input" type="checkbox" value="1" id="check11">' +
                '<label class="custom-control-label" for="check11">Horas Frio</label></div></div>' +
                '<div class="form-group">' +
                '<div class="custom-control custom-checkbox custom-control-inline">' +
                '<input class="custom-control-input" type="checkbox" value="2" id="check22">' +
                '<label class="custom-control-label" for="check22">Et Diario(Et0)</label></div></div></form></div>';

        }
        else if (select2Value == 1) {

            var indicadores = '<div class="col-md-9 col-form-label" id="divIndicadores">' +
                '<form class="form-inline">' +
                '<div class="form-group"><div class="custom-control custom-checkbox custom-control-inline">' +
                '<div class="form-group">' +
                '<div class="custom-control custom-checkbox custom-control-inline">' +
                '<input class="custom-control-input" type="checkbox" value="3" id="check33">' +
                '<label class="custom-control-label" for="check33">Et Instantaneo(Eta)</label></div></div></form></div>';

        }
        else
        {
            var indicadores = '<div class="col-md-9 col-form-label" id="divIndicadores">' +
                '<form class="form-inline">' +
                '<input class="form-control" type="text" placeholder="No se han encontrado Indicadores" readonly></form></div>';

        }
        $('#divIndicadores').replaceWith(indicadores);

    });



  //Funcion que dibuja los checkbox de los instrumentos(sensores) disponibles en funcion de la estacion seleccionada
  $('#select1').change(function () {
    var id = document.getElementById("select1").value; //id del imput de seleccion
    /*console.log("SET FORMCONTROL");
    console.log("SET FORMCONTROLaaa");
    console.log("ID: "+id);*/
    getSensorNames(id);


    //LLamada a la BD que recibe el id de la estacion y retorna los sensores disponibles en froma de checkbox
    function getSensorNames(id) {
      console.log("funcion y el id: "+id);
      $.ajax(
        {
          type: "GET",
          url: '@Url.Action("NombreSensores", "AgroDatos")',
          data: {
            id: id
          },
          dataType: "json",
          contentType: "application/json; charset=utf-8",
          error: function (jqXHR, exception) {
            var msg = '';
            if (jqXHR.status === 0) {
              msg = 'Not connect.\n Verify Network.';
            } else if (jqXHR.status == 404) {
              msg = 'Requested page not found. [404]';
            } else if (jqXHR.status == 500) {
              msg = 'Internal Server Error [500].';
            } else if (exception === 'parsererror') {
              msg = 'Requested JSON parse failed.';
            } else if (exception === 'timeout') {
              msg = 'Time out error.';
            } else if (exception === 'abort') {
              msg = 'Ajax request aborted.';
            } else {
              msg = 'Uncaught Error.\n' + jqXHR.responseText;
            }
            alert("error");
            console.log(msg);
          },

          success: function (data, status, result, lista) {
            //console.log(data.lista.length())
            //console.log(Object.values(data));
            //console.log(lista);
            //alert(Object.values(data) + "\nStatus: " + status);
            //console.log(data.length);

            if (data.length > 0) {
                var checkBox = '<div class="col-md-8 col-form-label" id="divSensorType">';
                checkBox += '<form class="form-inline">';
                $.each(data, function (i, Sensor) {
                    checkBox += '<div class="form-group">'
                    checkBox += '<div class="custom-control custom-checkbox custom-control-inline">';
                    checkBox += '<input class="custom-control-input" type="checkbox" value = "' + Sensor.id + '" id = "check' + i + '"checked>';
                    checkBox += '<label class="custom-control-label" for= "check' + i + '">' + Sensor.nombreSensor + '</label ></div></div>';
                });
                checkBox += '</form>';
              $('#divSensorType').replaceWith(checkBox);
            }
          }
        })
    }


  });


</script>

<script>
    function dibujarGrafico() {
        console.log("holamundo");

        var estacion = document.getElementById("select1g").value; //id del imput de seleccion
        var fechaI = document.getElementById("fechaIg").value;
        var fechaT = document.getElementById("fechaTg").value;

        var fecha1 = moment(fechaI);
        var fecha2 = moment(fechaT);

        var diasEntreFechas = fecha2.diff(fecha1, 'days');




        console.log("comparar fechas", fechaI > fechaT)
        if (fechaI > fechaT) {
            alert("Fecha de Termino es anterior a la de Inicio");
        }
        else {

            getSensorNames(estacion, fechaI, fechaT);
            function getSensorNames(estacion, fechaI, fechaT) {

                console.log("fechas y el id de estacion: " + estacion, fechaI, fechaT);
                $.ajax(
                    {
                        type: "GET",
                        url: '@Url.Action("ValorPiranometro", "AgroDatos")',
                        data: {
                            estacion: estacion,
                            fechaI: fechaI,
                            fechaT: fechaT
                        },
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        error: function (jqXHR, exception) {
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404]';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            alert("error");
                            console.log(msg);
                        },


                        success: function (data, status, result, lista) {
                            //console.log("length de los datos: ", data.datos.length());
                            console.log("objetcta.values(data)", Object.values(data));
                            console.log("cantidad de entradas: ", Object.values(data).length);
                            //console.log("data: ", data[0].fecha)


                            var labels = data.map(function (e) {
                                return e.fecha;
                            });
                            var datos = data.map(function (e) {
                                return e.valor;
                            });


                            for (var i = 0; i < labels.length; i++) {
                                //make sure we are not checking the last date in the labels array
                                if (i + 1 < labels.length) {
                                    var date1 = moment(labels[i], "DD-MM-YYYY");
                                    var date2 = moment(labels[i + 1], "DD-MM-YYYY");


                                    //if the current date +1 is not the same as it's next neighbor we have to add in a new one
                                    if (!date1.add(1, "days").isSame(date2)) {

                                        //add the label
                                        labels.splice(i + 1, 0, date1.format("DD-MM-YYYY"));
                                        //add the data
                                        datos.splice(i + 1, 0, 0);
                                    }
                                }
                            }


                            new Chart(document.getElementById("line-chart"), {
                                type: 'line',
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        data: datos,
                                        label: "Rad W/m2",
                                        fill: true,
                                        backgroundColor: 'rgba(0, 119, 204, 0.3)'
                                    }]
                                },

                                options: {
                                    title: {
                                        display: true,
                                        text: 'Valor de Radiacion Medido por piranometro al mediodia'
                                    },
                                    scales: {
                                        xAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }],
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    },
                                    plugins: {
                                        zoom: {
                                            // Container for pan options
                                            pan: {
                                                // Boolean to enable panning
                                                enabled: true,

                                                // Panning directions. Remove the appropriate direction to disable
                                                // Eg. 'y' would only allow panning in the y direction
                                                mode: 'x'
                                            },

                                            // Container for zoom options
                                            zoom: {
                                                // Boolean to enable zooming
                                                enabled: true,

                                                // Zooming directions. Remove the appropriate direction to disable
                                                // Eg. 'y' would only allow zooming in the y direction
                                                mode: 'x',
                                            }
                                        }
                                    }
                                }
                            });

                            if (diasEntreFechas + 1 != Object.values(data).length) {
                                var diferencia = (diasEntreFechas + 1) - Object.values(data).length
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Datos incompletos',
                                    text: 'Hay perdida de ' +diferencia+' '+' datos en el intervalo de fechas',
                                    footer: 'Pruebe con un nuevo intervalo o comuniquese con el Admin.'
                                })
                                console.log("Dias entre fecha: ", diasEntreFechas, "cantidad de entradas: ", Object.values(data).length)
                            }
                            else {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Datos completos',
                                    text: 'Todos los datos del intervalo estan disponibles.'
                                })
                                console.log("Dias entre fecha: ", diasEntreFechas, "cantidad de entradas: ", Object.values(data).length)
                            }
                            //alert(Object.values(data) + "\nStatus: " + status);
                            //console.log(data.length);
                        }
                    } )
            }
        }




    }






</script>



