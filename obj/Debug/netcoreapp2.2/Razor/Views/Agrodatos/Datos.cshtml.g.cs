#pragma checksum "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a112ebf8bd862367417bb199943573e00e4ab6e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Agrodatos_Datos), @"mvc.1.0.view", @"/Views/Agrodatos/Datos.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Agrodatos/Datos.cshtml", typeof(AspNetCore.Views_Agrodatos_Datos))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\_ViewImports.cshtml"
using CitraDataStore;

#line default
#line hidden
#line 2 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\_ViewImports.cshtml"
using CitraDataStore.Models;

#line default
#line hidden
#line 3 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a112ebf8bd862367417bb199943573e00e4ab6e", @"/Views/Agrodatos/Datos.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"685786d528591fe38a675b867e37c0bea3782889", @"/Views/_ViewImports.cshtml")]
    public class Views_Agrodatos_Datos : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<CitraDataStore.Models.Agrodatos>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(217, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 6 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
  
    ViewBag.Title = "Agrodatos";

#line default
#line hidden
            BeginContext(260, 8, true);
            WriteLiteral("\r\n\r\n\r\n\r\n");
            EndContext();
#line 13 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(322, 473, true);
            WriteLiteral(@"

<!-- Content Header (Page header) -->
<header>

    <meta name=""viewport"" content=""width=device-width"" />
    <!-- Geoblaze -->
    <script src=""https://momentjs.com/downloads/moment.min.js""></script>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>

</header>

<style>
    .card-img-top {
        width: 100%;
        height: 20vw;
        object-fit: cover;
    }
</style>

<!-- Main content -->
<html>
");
            EndContext();
            BeginContext(795, 1296, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e6432", async() => {
                BeginContext(801, 1283, true);
                WriteLiteral(@"
    <h1>Descarga de datos Agroclimatologicos</h1>
    <div class=""row"">
        <div class=""col-sm-6"">
            <div class=""card shadow mb-4"">
                <img class=""card-img-top"" src=""/images/estacion5.jpg"" alt=""Card image cap"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Descarga de datos Agroclimatologicos</h6>
                </div>
                <div class=""card-body"">
                    <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target="".cd-example-modal-lg"">Descargar Datos</button>
                </div>
            </div>
        </div>
        <div class=""col-sm-6"">
            <div class=""card shadow mb-4"">
                <img class=""card-img-top"" src=""/images/estacion4.jpg"" alt=""Card image cap"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Descarga de datos Agroclimatologicos</h6>
                </div>
");
                WriteLiteral(@"                <div class=""card-body"">
                    <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target="".cd-modal-lg"">Descargar Et</button>
                </div>
            </div>
        </div>
    </div>





");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2091, 851, true);
            WriteLiteral(@"
<!-- /.content -->







<div class=""modal fade cd-example-modal-lg"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" id=""myModal"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">




            <div class=""card shadow mb-4"">
                <div class=""card-header"">
                    <strong class=""m-0 font-weight-bold text-primary"">Descarga de datos Agroclimatologicos</strong>

                </div>
                <div class=""card-body"">


                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""select1"">Estaci√≥n</label>
                        <div class=""col-md-9"">
                            <select id=""select1"" name=""select1"" class=""form-control"">
                                ");
            EndContext();
            BeginContext(2942, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e9871", async() => {
                BeginContext(2950, 23, true);
                WriteLiteral("Selecionar una estaci√≥n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2982, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 98 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                 foreach (var item in Model)
                                {

#line default
#line hidden
            BeginContext(3081, 36, true);
            WriteLiteral("                                    ");
            EndContext();
            BeginContext(3117, 117, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e11433", async() => {
                BeginContext(3174, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(3176, 49, false);
#line 100 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                                                                         Write(Html.DisplayFor(modelItem => item.NombreEstacion));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 100 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                      WriteLiteral(Html.DisplayTextFor(modelItem => item.Id));

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3234, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 101 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                }

#line default
#line hidden
            BeginContext(3271, 414, true);
            WriteLiteral(@"                            </select>

                        </div>
                    </div>


                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""select2"">Datos</label>
                        <div class=""col-md-9"">
                            <select id=""select2"" name=""select2"" class=""form-control"">
                                ");
            EndContext();
            BeginContext(3685, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e14340", async() => {
                BeginContext(3703, 13, true);
                WriteLiteral("Elegir Opci√≥n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3725, 34, true);
            WriteLiteral("\r\n                                ");
            EndContext();
            BeginContext(3759, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e15758", async() => {
                BeginContext(3777, 17, true);
                WriteLiteral("Datos instant√°eos");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3803, 34, true);
            WriteLiteral("\r\n                                ");
            EndContext();
            BeginContext(3837, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e17180", async() => {
                BeginContext(3855, 13, true);
                WriteLiteral("Datos diarios");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3877, 2378, true);
            WriteLiteral(@"

                            </select>

                        </div>
                    </div>


                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"">Sensores Disponibles</label>
                        <div class=""col-md-9 col-form-label"" id=""divSensorType"">
                            <input class=""form-control"" type=""text"" placeholder=""No se han encontrado sensores"" readonly>
                            <!--Aqui van los checkbox en funcion de la esacion seleccionada
                            Son llamados en el script-->
                        </div>





                    </div>



                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""password-inputate-input"">Fecha Desde</label>
                        <div class=""col-md-9"">
                            <input type=""date"" id=""fecha1"" name=""fecha1"" class=""form-control"" placeholder=""Fecha"">
            ");
            WriteLiteral(@"                <span class=""help-block"">Ingresar fecha de inicio</span>
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""password-inputate-input"">Fecha Hasta</label>
                        <div class=""col-md-9"">
                            <input type=""date"" id=""fecha2"" name=""fecha2"" class=""form-control"" placeholder=""Fecha"">
                            <span class=""help-block"">Ingresar fecha de inicio</span>
                        </div>
                    </div>


                    <button class=""btn btn-primary"" type=""button"" data-toggle=""collapse"" data-target=""#collapseExample"" aria-expanded=""false"" aria-controls=""collapseExample"">
                        Opci√≥nes Avanzadas
                    </button>

                    <div class=""collapse"" id=""collapseExample"">
                        <div class=""panel panel-body"">


                            <div");
            WriteLiteral(@" class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select3"">Separador de Datos</label>
                                <div class=""col-md-9"">
                                    <select id=""select3"" name=""select3"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(6255, 47, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e21093", async() => {
                BeginContext(6273, 20, true);
                WriteLiteral("Punto y Coma (Excel)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6302, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(6344, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e22526", async() => {
                BeginContext(6362, 17, true);
                WriteLiteral("Coma (OpenOffice)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6388, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(6430, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e23956", async() => {
                BeginContext(6448, 9, true);
                WriteLiteral("Tabulador");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6466, 497, true);
            WriteLiteral(@"

                                    </select>

                                </div>
                            </div>

                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select4"">Separador de decimales</label>
                                <div class=""col-md-9"">
                                    <select id=""select4"" name=""select4"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(6963, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e25846", async() => {
                BeginContext(6981, 13, true);
                WriteLiteral("Punto (en-US)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7003, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(7045, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e27272", async() => {
                BeginContext(7063, 12, true);
                WriteLiteral("Coma (es-CL)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7084, 493, true);
            WriteLiteral(@"

                                    </select>

                                </div>
                            </div>

                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select5"">Separador de miles</label>
                                <div class=""col-md-9"">
                                    <select id=""select5"" name=""select5"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(7577, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e29162", async() => {
                BeginContext(7595, 13, true);
                WriteLiteral("Sin separador");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7617, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(7659, 32, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e30588", async() => {
                BeginContext(7677, 5, true);
                WriteLiteral("Punto");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7691, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(7733, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e32005", async() => {
                BeginContext(7751, 4, true);
                WriteLiteral("Coma");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7764, 490, true);
            WriteLiteral(@"

                                    </select>

                                </div>
                            </div>

                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select6"">M√°ximo de filas</label>
                                <div class=""col-md-9"">
                                    <select id=""select6"" name=""select6"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(8254, 56, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e33883", async() => {
                BeginContext(8272, 29, true);
                WriteLiteral("65535 Excel 2003 y OpenOffice");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8310, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(8352, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e35325", async() => {
                BeginContext(8370, 18, true);
                WriteLiteral("1048576 Excel 2007");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8397, 1352, true);
            WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class=""card-footer"">
                    <button type=""submit"" class=""btn btn-success"" id=""Descargar"" onclick=""descargarDatos()"">
                        <i class=""fa fa-dot-circle-o""></i> Descargar
                    </button>

                </div>


            </div>
        </div>
    </div>
</div>

<div class=""modal fade cd-modal-lg"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel"" aria-hidden=""true"" id=""myModal"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">




            <div class=""card shadow mb-4"">
                <div class=""card-header"">
                    <strong class=""m-0 font-weight-bold text-primary"">Descarga de Indicadores</strong>

                </div>
                <div class=""card");
            WriteLiteral(@"-body"">


                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""select11"">Estaci√≥n</label>
                        <div class=""col-md-9"">
                            <select id=""select11"" name=""select11"" class=""form-control"">
                                ");
            EndContext();
            BeginContext(9749, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e38149", async() => {
                BeginContext(9757, 23, true);
                WriteLiteral("Selecionar una estaci√≥n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9789, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 248 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                 foreach (var item in Model)
                                {

#line default
#line hidden
            BeginContext(9888, 36, true);
            WriteLiteral("                                    ");
            EndContext();
            BeginContext(9924, 117, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e39713", async() => {
                BeginContext(9981, 1, true);
                WriteLiteral(" ");
                EndContext();
                BeginContext(9983, 49, false);
#line 250 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                                                                         Write(Html.DisplayFor(modelItem => item.NombreEstacion));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 250 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                      WriteLiteral(Html.DisplayTextFor(modelItem => item.Id));

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10041, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 251 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                }

#line default
#line hidden
            BeginContext(10078, 417, true);
            WriteLiteral(@"                            </select>

                        </div>
                    </div>


                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""select22"">Datos</label>
                        <div class=""col-md-9"">
                            <select id=""select22"" name=""select22"" class=""form-control"">
                                ");
            EndContext();
            BeginContext(10495, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e42626", async() => {
                BeginContext(10513, 13, true);
                WriteLiteral("Elegir Opci√≥n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10535, 34, true);
            WriteLiteral("\r\n                                ");
            EndContext();
            BeginContext(10569, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e44047", async() => {
                BeginContext(10587, 18, true);
                WriteLiteral("Datos Instant√°neos");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10614, 34, true);
            WriteLiteral("\r\n                                ");
            EndContext();
            BeginContext(10648, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e45473", async() => {
                BeginContext(10666, 13, true);
                WriteLiteral("Datos diarios");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10688, 366, true);
            WriteLiteral(@"

                            </select>

                        </div>
                    </div>


                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"">Indicadores Disponibles</label>
                        <div class=""col-md-9 col-form-label"" id=""divIndicadores"">
                            ");
            EndContext();
            BeginContext(11054, 323, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e47235", async() => {
                BeginContext(11080, 290, true);
                WriteLiteral(@"

                                <input class=""form-control"" type=""text"" placeholder=""No se han encontrado Indicadores"" readonly>
                                <!--Aqui van los checkbox en funcion de la esacion seleccionada Son llamados en el script-->

                            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11377, 1775, true);
            WriteLiteral(@"
                        </div>


                    </div>



                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""password-inputate-input"">Fecha Desde</label>
                        <div class=""col-md-9"">
                            <input type=""date"" id=""fecha11"" name=""fecha11"" class=""form-control"" placeholder=""Fecha"">
                            <span class=""help-block"">Ingresar fecha de inicio</span>
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <label class=""col-md-3 col-form-label"" for=""password-inputate-input"">Fecha Hasta</label>
                        <div class=""col-md-9"">
                            <input type=""date"" id=""fecha22"" name=""fecha22"" class=""form-control"" placeholder=""Fecha"">
                            <span class=""help-block"">Ingresar fecha de inicio</span>
                        </div>
                    </div>");
            WriteLiteral(@"


                    <button class=""btn btn-primary"" type=""button"" data-toggle=""collapse"" data-target=""#collapseExample2"" aria-expanded=""false"" aria-controls=""collapseExample"">
                        Opci√≥nes Avanzadas
                    </button>

                    <div class=""collapse"" id=""collapseExample2"">
                        <div class=""panel panel-body"">


                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select33"">Separador de Datos</label>
                                <div class=""col-md-9"">
                                    <select id=""select33"" name=""select33"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(13152, 47, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e50944", async() => {
                BeginContext(13170, 20, true);
                WriteLiteral("Punto y Coma (Excel)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13199, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(13241, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e52380", async() => {
                BeginContext(13259, 17, true);
                WriteLiteral("Coma (OpenOffice)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13285, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(13327, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e53813", async() => {
                BeginContext(13345, 9, true);
                WriteLiteral("Tabulador");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13363, 500, true);
            WriteLiteral(@"

                                    </select>

                                </div>
                            </div>

                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select44"">Separador de decimales</label>
                                <div class=""col-md-9"">
                                    <select id=""select44"" name=""select44"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(13863, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e55709", async() => {
                BeginContext(13881, 13, true);
                WriteLiteral("Punto (en-US)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13903, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(13945, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e57138", async() => {
                BeginContext(13963, 12, true);
                WriteLiteral("Coma (es-CL)");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13984, 496, true);
            WriteLiteral(@"

                                    </select>

                                </div>
                            </div>

                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select55"">Separador de miles</label>
                                <div class=""col-md-9"">
                                    <select id=""select55"" name=""select55"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(14480, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e59034", async() => {
                BeginContext(14498, 13, true);
                WriteLiteral("Sin separador");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14520, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(14562, 32, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e60463", async() => {
                BeginContext(14580, 5, true);
                WriteLiteral("Punto");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14594, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(14636, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e61883", async() => {
                BeginContext(14654, 4, true);
                WriteLiteral("Coma");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14667, 493, true);
            WriteLiteral(@"

                                    </select>

                                </div>
                            </div>

                            <div class=""form-group row"">
                                <label class=""col-md-3 col-form-label"" for=""select66"">M√°ximo de filas</label>
                                <div class=""col-md-9"">
                                    <select id=""select66"" name=""select66"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(15160, 56, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e63767", async() => {
                BeginContext(15178, 29, true);
                WriteLiteral("65535 Excel 2003 y OpenOffice");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15216, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(15258, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a112ebf8bd862367417bb199943573e00e4ab6e65212", async() => {
                BeginContext(15276, 18, true);
                WriteLiteral("1048576 Excel 2007");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15303, 1948, true);
            WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class=""card-footer"">
                    <button type=""submit"" class=""btn btn-success"" id=""DescargarInd"" onclick=""descargarIndicadores()"">
                        <i class=""fa fa-dot-circle-o""></i> Descargar
                    </button>

                </div>


            </div>
        </div>
    </div>
</div>

</html>


<script type=""text/javascript"">

  // Funcion que captura los datos del formulario y envia una consulta a la BD para recuperar los datos en un archivo CSV
    function descargarIndicadores() {

        var estacion = document.getElementById(""select11"").value;
        var datos = document.getElementById(""select22"").value;
        var fechaI = document.getElementById(""fecha11"").value;
        var fechaT = document.getElementById(""fecha22");
            WriteLiteral(@""").value;
        //var sensores = $('#divIndicadores')[0];
        var separadorDatos = document.getElementById(""select33"").value;
        var separadorDecimales = document.getElementById(""select44"").value;
        var separadorMiles = document.getElementById(""select55"").value;

        var eta
        var gd
        var hf
        var eto
        if (estacion <= 0) {
            Swal.fire({
                icon: 'error',
                title: 'La estaci√≥n no ha sido seleccionada.',
                text: 'Debe seleccionar una estaci√≥n valida.'
            })
        }
        else {

            if (fechaI != """" && fechaT != """") {

                var fecha1 = moment(fechaI);
                var fecha2 = moment(fechaT);

                console.log(""doy: "", fecha1.dayOfYear());

                var diasEntreFechas = fecha2.diff(fecha1, 'days');
                var diasDisponibles = ");
            EndContext();
            BeginContext(17252, 68, false);
#line 416 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                 Write(HttpContextAccessor.HttpContext.Session.GetInt32("dias_disponibles"));

#line default
#line hidden
            EndContext();
            BeginContext(17320, 1051, true);
            WriteLiteral(@"

                console.log(""comparar fechas"", fechaI > fechaT)
                if (fechaI > fechaT) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Fechas Nulas',
                        text: 'Fecha de termino es anterior a la de inicio.'
                    })
                }

                if (diasDisponibles > 0 && diasEntreFechas > diasDisponibles) {

                    Swal.fire({
                        icon: 'warning',
                        title: 'L√≠mite de d√≠as alcanzado',
                        text: 'Su cantidad maxima es de ' + diasDisponibles + ' d√≠as y supera su petici√≥n de ' + diasEntreFechas + ' d√≠as.'
                    })
                }

                else {

                    if (datos == 1) { //datos instantaneos
                    var eta = document.getElementById(""check33"").checked;
                    $.ajax(
                        {
                            type: ""POST"",
       ");
            WriteLiteral("                     url: \"");
            EndContext();
            BeginContext(18372, 52, false);
#line 443 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                             Write(Url.Action("EnviarConsultaIndicadores", "AgroDatos"));

#line default
#line hidden
            EndContext();
            BeginContext(18424, 3000, true);
            WriteLiteral(@""",
                            data: {
                                estacion: estacion,
                                datos: datos,
                                fechaI: fechaI,
                                fechaT: fechaT,
                                eta: eta,
                                separadorDatos: separadorDatos,
                                separadorDecimales: separadorDecimales,
                                separadorMiles: separadorMiles,
                            },

                            error: function (jqXHR, exception) {
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Requested page not found. [404]';
                                } else if (jqXHR.status == 500) {
                                    msg = 'I");
            WriteLiteral(@"nternal Server Error [500].';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                alert(""error"");
                                console.log(msg);
                            },

                            //Crea un link para descargar el archivo CSV generado
                            success: function (data, status) {
                                console.log(""success"");
                                var contentType = 'text/csv';
          ");
            WriteLiteral(@"                      var blob = new Blob([data], { type: contentType });
                                var link = document.createElement('a');
                                link.href = window.URL.createObjectURL(blob);
                                link.download = ""test.csv"";
                                link.textContent = ""Descargar CSV"";
                                link.click();
                                console.log(""despues de la descarga"");
                            }
                        })
                }
                else if (datos == 2) {
                    var gd = document.getElementById(""check00"").checked;
                    var hf = document.getElementById(""check11"").checked;
                    var eto = document.getElementById(""check22"").checked;

                    $.ajax(
                        {
                            type: ""POST"",
                            url: """);
            EndContext();
            BeginContext(21425, 52, false);
#line 498 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                             Write(Url.Action("EnviarConsultaIndicadores", "AgroDatos"));

#line default
#line hidden
            EndContext();
            BeginContext(21477, 4547, true);
            WriteLiteral(@""",
                            data: {
                                estacion: estacion,
                                datos: datos,
                                fechaI: fechaI,
                                fechaT: fechaT,
                                gd: gd,
                                hf: hf,
                                eto: eto,
                                separadorDatos: separadorDatos,
                                separadorDecimales: separadorDecimales,
                                separadorMiles: separadorMiles,
                            },

                            error: function (jqXHR, exception) {
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Requested page not found. [404]';
                             ");
            WriteLiteral(@"   } else if (jqXHR.status == 500) {
                                    msg = 'Internal Server Error [500].';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                alert(""error"");
                                console.log(msg);
                            },

                            //Crea un link para descargar el archivo CSV generado
                            success: function (data, status) {
                                console.log(""suc");
            WriteLiteral(@"cess"");
                                var contentType = 'text/csv';
                                var blob = new Blob([data], { type: contentType });
                                var link = document.createElement('a');
                                link.href = window.URL.createObjectURL(blob);
                                link.download = ""test.csv"";
                                link.textContent = ""Descargar CSV"";
                                link.click();
                                console.log(""despues de la descarga"");
                            }
                        })
                }
                }

            }

        }





      /*
      var childSize = sensores.childNodes.length;
      console.log(""chldSize: "" + childSize);
      var check = [];
      for (var i = 0; i < childSize; i++)
      {
        console.log(""ChildValue: "" + sensores.childNodes[i].childNodes[0].value);
        //console.log(""asdf: "" + sensores.childNodes[i].childNod");
            WriteLiteral(@"es[0].checked);
        if (sensores.childNodes[i].childNodes[0].checked == false) {
          console.log(""ChildValue no sel: "" + sensores.childNodes[i].childNodes[0].value);
          check.push(sensores.childNodes[i].childNodes[0].value);
        }

        console.log(""tama√±o arreglo: "" + check.length);
      }*/


    }

    function descargarDatos() {
        var estacion = document.getElementById(""select1"").value;
        var datos = document.getElementById(""select2"").value;
        var fechaI = document.getElementById(""fecha1"").value;
        var fechaT = document.getElementById(""fecha2"").value;
        var sensores = $('#divSensorType')[0];


        var separadorDatos = document.getElementById(""select3"").value;
        var separadorDecimales = document.getElementById(""select4"").value;
        var separadorMiles = document.getElementById(""select5"").value;


        if (estacion <= 0) {
            Swal.fire({
                icon: 'error',
                title: 'La estaci");
            WriteLiteral(@"√≥n no ha sido seleccionada.',
                text: 'Debe seleccionar una estaci√≥n valida.'
            })
        }
        else {

            if (fechaI != """" && fechaT != """") {

                var fecha1 = moment(fechaI);
                var fecha2 = moment(fechaT);

                console.log(""doy: "", fecha1.dayOfYear());

                var diasEntreFechas = fecha2.diff(fecha1, 'days');
                var diasDisponibles = ");
            EndContext();
            BeginContext(26025, 68, false);
#line 606 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                                 Write(HttpContextAccessor.HttpContext.Session.GetInt32("dias_disponibles"));

#line default
#line hidden
            EndContext();
            BeginContext(26093, 1745, true);
            WriteLiteral(@"

                    console.log(""comparar fechas"", fechaI > fechaT)
                if (fechaI > fechaT) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Fechas Nulas',
                        text: 'Fecha de termino es anterior a la de inicio.'
                    })
                }

                if (diasDisponibles > 0 && diasEntreFechas > diasDisponibles) {

                    Swal.fire({
                        icon: 'warning',
                        title: 'L√≠mite de d√≠as alcanzado',
                        text: 'Su cantidad maxima es de ' + diasDisponibles + ' d√≠as y supera su petici√≥n de ' + diasEntreFechas + ' d√≠as.'
                    })
                }

                else {

                    var childSize = sensores.childNodes.length;
                    console.log(""chldSize: "" + childSize);
                    var check = [];
                    for (var i = 0; i < childSize; i++) {
                ");
            WriteLiteral(@"        console.log(""ChildValue: "" + sensores.childNodes[i].childNodes[0].value);
                        //console.log(""asdf: "" + sensores.childNodes[i].childNodes[0].checked);
                        if (sensores.childNodes[i].childNodes[0].checked == false) {
                            console.log(""ChildValue no sel: "" + sensores.childNodes[i].childNodes[0].value);
                            check.push(sensores.childNodes[i].childNodes[0].value);
                        }

                        console.log(""tama√±o arreglo: "" + check.length);
                    }

                    $.ajax(
                        {
                            type: ""POST"",
                            url: """);
            EndContext();
            BeginContext(27839, 41, false);
#line 645 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
                             Write(Url.Action("EnviarConsulta", "AgroDatos"));

#line default
#line hidden
            EndContext();
            BeginContext(27880, 6797, true);
            WriteLiteral(@""",
                            data: {
                                estacion: estacion,
                                datos: datos,
                                fechaI: fechaI,
                                fechaT: fechaT,
                                separadorDatos: separadorDatos,
                                separadorDecimales: separadorDecimales,
                                separadorMiles: separadorMiles,
                                check: check

                            },

                            error: function (jqXHR, exception) {
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Requested page not found. [404]';
                                } else if (jqXHR.status == 500) {
                                    msg");
            WriteLiteral(@" = 'Internal Server Error [500].';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                alert(""error"");
                                console.log(msg);
                            },

                            //Crea un link para descargar el archivo CSV generado
                            success: function (data, status) {
                                console.log(""success"");
                                var contentType = 'text/csv';
     ");
            WriteLiteral(@"                           var blob = new Blob([data], { type: contentType });
                                var link = document.createElement('a');
                                link.href = window.URL.createObjectURL(blob);
                                link.download = ""test.csv"";
                                link.textContent = ""Descargar CSV"";
                                link.click();
                                console.log(""despues de la descarga"");
                            }
                        })
                }





            }
        }
    }

</script>

<script>

  function obtenerDatos() {
    var estacion = document.getElementById(""select1"").value;
    var datos = document.getElementById(""select2"").value;
    var fechaI = document.getElementById(""fecha1"").value;
    var fechaT = document.getElementById(""fecha2"").value;
    var sensores = $('#divSensorType')[0];
    /*for (int i = 0; i < sensores.children.length; i++)
    {
      var child = ");
            WriteLiteral(@"sensores.children[i];
      console.log(""Sensores: "" + child);
    }*/




    console.log(""Estacion: "" + estacion);
    console.log(""Datos: "" + datos);
    console.log(""Inicio: "" + fechaI);
    console.log(""Termino: "" + fechaT);


    //OPCIONES AVANZADAS

    var separadorDatos = document.getElementById(""select3"").value;
    var separadorDecimal = document.getElementById(""select4"").value;
    var separadorMiles = document.getElementById(""select5"").value;
    var maxFilas = document.getElementById(""select6"").value;
    console.log(""Sep datos: "" + separadorDatos);
    console.log(""Sep decimal: "" + separadorDecimal);
    console.log(""sep miles: "" + separadorMiles);
    console.log(""maxFila: "" + maxFilas);


    }

    $('#select22').change(function () {

        var select2Value = document.getElementById(""select22"").value;
        if (select2Value == 2) {

            var indicadores = '<div class=""col-md-9 col-form-label"" id=""divIndicadores"">' +
                '<form class=""f");
            WriteLiteral(@"orm-inline"">' +
                '<div class=""form-group""><div class=""custom-control custom-checkbox custom-control-inline"">' +
                '<input class=""custom-control-input"" type=""checkbox"" value=""0"" id=""check00"">' +
                '<label class=""custom-control-label"" for=""check00"">Grados Dia</label></div></div>' +
                '<div class=""form-group"">' +
                '<div class=""custom-control custom-checkbox custom-control-inline"">' +
                '<input class=""custom-control-input"" type=""checkbox"" value=""1"" id=""check11"">' +
                '<label class=""custom-control-label"" for=""check11"">Horas Frio</label></div></div>' +
                '<div class=""form-group"">' +
                '<div class=""custom-control custom-checkbox custom-control-inline"">' +
                '<input class=""custom-control-input"" type=""checkbox"" value=""2"" id=""check22"">' +
                '<label class=""custom-control-label"" for=""check22"">Et Diario(Et0)</label></div></div></form></div>';

        }
 ");
            WriteLiteral(@"       else if (select2Value == 1) {

            var indicadores = '<div class=""col-md-9 col-form-label"" id=""divIndicadores"">' +
                '<form class=""form-inline"">' +
                '<div class=""form-group""><div class=""custom-control custom-checkbox custom-control-inline"">' +
                '<div class=""form-group"">' +
                '<div class=""custom-control custom-checkbox custom-control-inline"">' +
                '<input class=""custom-control-input"" type=""checkbox"" value=""3"" id=""check33"">' +
                '<label class=""custom-control-label"" for=""check33"">Et Instantaneo(Eta)</label></div></div></form></div>';

        }
        else
        {
            var indicadores = '<div class=""col-md-9 col-form-label"" id=""divIndicadores"">' +
                '<form class=""form-inline"">' +
                '<input class=""form-control"" type=""text"" placeholder=""No se han encontrado Indicadores"" readonly></form></div>';

        }
        $('#divIndicadores').replaceWith(indicadores);");
            WriteLiteral(@"

    });



  //Funcion que dibuja los checkbox de los instrumentos(sensores) disponibles en funcion de la estacion seleccionada
  $('#select1').change(function () {
    var id = document.getElementById(""select1"").value; //id del imput de seleccion
    /*console.log(""SET FORMCONTROL"");
    console.log(""SET FORMCONTROLaaa"");
    console.log(""ID: ""+id);*/
    getSensorNames(id);


    //LLamada a la BD que recibe el id de la estacion y retorna los sensores disponibles en froma de checkbox
    function getSensorNames(id) {
      console.log(""funcion y el id: ""+id);
      $.ajax(
        {
          type: ""GET"",
          url: '");
            EndContext();
            BeginContext(34678, 41, false);
#line 800 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Agrodatos\Datos.cshtml"
           Write(Url.Action("NombreSensores", "AgroDatos"));

#line default
#line hidden
            EndContext();
            BeginContext(34719, 2178, true);
            WriteLiteral(@"',
          data: {
            id: id
          },
          dataType: ""json"",
          contentType: ""application/json; charset=utf-8"",
          error: function (jqXHR, exception) {
            var msg = '';
            if (jqXHR.status === 0) {
              msg = 'Not connect.\n Verify Network.';
            } else if (jqXHR.status == 404) {
              msg = 'Requested page not found. [404]';
            } else if (jqXHR.status == 500) {
              msg = 'Internal Server Error [500].';
            } else if (exception === 'parsererror') {
              msg = 'Requested JSON parse failed.';
            } else if (exception === 'timeout') {
              msg = 'Time out error.';
            } else if (exception === 'abort') {
              msg = 'Ajax request aborted.';
            } else {
              msg = 'Uncaught Error.\n' + jqXHR.responseText;
            }
            alert(""error"");
            console.log(msg);
          },

          success: function (data, st");
            WriteLiteral(@"atus, result, lista) {
            //console.log(data.lista.length())
            //console.log(Object.values(data));
            //console.log(lista);
            //alert(Object.values(data) + ""\nStatus: "" + status);
            //console.log(data.length);

            if (data.length > 0) {
                var checkBox = '<div class=""col-md-8 col-form-label"" id=""divSensorType"">';
                checkBox += '<form class=""form-inline"">';
                $.each(data, function (i, Sensor) {
                    checkBox += '<div class=""form-group"">'
                    checkBox += '<div class=""custom-control custom-checkbox custom-control-inline"">';
                    checkBox += '<input class=""custom-control-input"" type=""checkbox"" value = ""' + Sensor.id + '"" id = ""check' + i + '""checked>';
                    checkBox += '<label class=""custom-control-label"" for= ""check' + i + '"">' + Sensor.nombreSensor + '</label ></div></div>';
                });
                checkBox += '</form>';
     ");
            WriteLiteral("         $(\'#divSensorType\').replaceWith(checkBox);\r\n            }\r\n          }\r\n        })\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n</script>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<CitraDataStore.Models.Agrodatos>> Html { get; private set; }
    }
}
#pragma warning restore 1591
