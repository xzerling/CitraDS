#pragma checksum "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Home\Privacy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Privacy), @"mvc.1.0.view", @"/Views/Home/Privacy.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Privacy.cshtml", typeof(AspNetCore.Views_Home_Privacy))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\_ViewImports.cshtml"
using CitraDataStore;

#line default
#line hidden
#line 2 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\_ViewImports.cshtml"
using CitraDataStore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e", @"/Views/Home/Privacy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"685786d528591fe38a675b867e37c0bea3782889", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Privacy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "EPSG:4326", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "EPSG:3857", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "EPSG:32719", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Polygon", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(18, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\Zerling\Documents\UTAL\2020-1\Citra\New\Git2\CitraDS\Views\Home\Privacy.cshtml"
  
    ViewData["Title"] = "Mapa de prueba";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(117, 31, true);
            WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n");
            EndContext();
            BeginContext(148, 573, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e5689", async() => {
                BeginContext(154, 560, true);
                WriteLiteral(@"
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>Tiled WMS</title>
    <link rel=""stylesheet"" href=""https://openlayers.org/en/v5.3.0/css/ol.css"" type=""text/css"">
    <!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
    <script src=""https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL""></script>
    <script src=""https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.3.0/build/ol.js""></script>
    
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(721, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(725, 5322, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e7448", async() => {
                BeginContext(731, 888, true);
                WriteLiteral(@"
    <h4>Mapa de pruebas</h4>
    <div class=""row"">
        <div class=""col-md-8"">
            <div class=""card shadow mb-4"">
                <div class=""card-header""><h5>Mapa</h5></div>
                <div class=""card-body"">
                    <div class=""panel panel-primary"">
                        <div class=""panel-body"">
                            <div id=""map"" class=""map""></div>
                        </div>
                    </div>
                </div>

                <div class=""card-footer"">
                    <div class=""row"">

                        <label>Coordenadas:</label>
                        <div class=""col-md-3"" id=""mouse-position""></div>

                        <div clas=""col-md-2"">
                            <label>Proyecci√≥n</label>
                            <select id=""projection"">
                                ");
                EndContext();
                BeginContext(1619, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e8747", async() => {
                    BeginContext(1645, 9, true);
                    WriteLiteral("EPSG:4326");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1663, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(1697, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e10247", async() => {
                    BeginContext(1723, 9, true);
                    WriteLiteral("EPSG:3857");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1741, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(1775, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e11748", async() => {
                    BeginContext(1802, 10, true);
                    WriteLiteral("EPSG:32719");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1821, 3093, true);
                WriteLiteral(@"
                            </select>
                        </div>

                        <div clas=""col-md-3"">
                            <label>Precisi√≥n</label>
                            <input id=""precision"" type=""number"" min=""0"" max=""12"" value=""4"" />
                        </div>

                    </div>
                </div>
            </div>
        </div>


        <div class=""col-md-4"">
            <div class=""card shadow mb-4"">
                <div class=""card-header"">
                    <h4>Herramientas de Mapa</h4>
                </div>
                <div class=""card-body"">
                    <div class=""container-fluid"">
                        <div class=""col"">

                            <div clas=""row-md-2"">
                                <h5>Control de Pol√≠gonos</h5>
                                <div class=""btn-group d-flex"" role=""group"">
                                    <button type=""button"" id=""b1"" value=""btn1"" onclick=""addInteraction();");
                WriteLiteral(@" disableB1()"" class=""btn btn-primary"">Dibujar</button>
                                    <button type=""button"" id=""b2"" value=""btn2"" onclick=""removeInteraction(); disableB2()"" disabled=""true"" class=""btn btn-primary "">Terminar</button>
                                </div>
                            </div>

                            <hr />

                            <div clas=""row-md-2"">
                                <h5>Indicadores</h5>
                                <div class=""custom-control custom-radio"">
                                    <input type=""radio"" id=""customRadio1"" name=""customRadio"" class=""custom-control-input"">
                                    <label class=""custom-control-label"" for=""customRadio1"">NDVI</label>
                                </div>
                                <div class=""custom-control custom-radio"">
                                    <input type=""radio"" id=""customRadio2"" name=""customRadio"" class=""custom-control-input"">
                      ");
                WriteLiteral(@"              <label class=""custom-control-label"" for=""customRadio2"">ET24</label>
                                </div>
                                <div class=""custom-control custom-radio"">
                                    <input type=""radio"" id=""customRadio3"" name=""customRadio"" class=""custom-control-input"">
                                    <label class=""custom-control-label"" for=""customRadio3"">LAI</label>
                                </div>
                            </div>

                            <hr />

                            <div clas=""row-md-2"">
                                <h5>Operaci√≥nes</h5>
                                <button type=""button"" id=""save"" onclick=""printpoly()"" class=""btn btn-success"">Calcular Suma</button>
                                <button type=""button"" id=""sum"" class=""btn btn-success"">Guardar</button>
                            </div>

                            <hr />

                            <div clas=""row-md-2"">
           ");
                WriteLiteral("                     ");
                EndContext();
                BeginContext(4914, 683, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e16533", async() => {
                    BeginContext(4940, 175, true);
                    WriteLiteral("\r\n                                    <label>Tipo de Geometria &nbsp;</label>\r\n                                    <select id=\"type\">\r\n                                        ");
                    EndContext();
                    BeginContext(5115, 41, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02351c6adfbc9b7d4f02b0ca6a5c7e404b54280e17118", async() => {
                        BeginContext(5139, 8, true);
                        WriteLiteral("Pol√≠gono");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(5156, 434, true);
                    WriteLiteral(@"
                                        <!--
                                            <option value=""Point"">Point</option>
                                            <option value=""LineString"">LineString</option>
                                            <option value=""Circle"">Circle</option>
                                            -->
                                    </select>
                                ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5597, 443, true);
                WriteLiteral(@"
                            </div>

                        </div>
                    </div>

                    <footer class=""blockquote-footer"">
                        <small class=""text-muted"">
                            Someone famous in <cite title=""Source Title"">Source Title</cite>
                        </small>
                    </footer>

                </div>
            </div>
        </div>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6047, 8006, true);
            WriteLiteral(@"
</html>

<script>

    const pro = proj4.defs(""EPSG:32719"", ""+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs"");
    ol.proj.proj4.register(proj4);

    //Coordenada del mapa desde el cursor
    var mousePositionControl = new ol.control.MousePosition({
        coordinateFormat: ol.coordinate.createStringXY(4),
        projection: 'EPSG:4326',
        // comment the following two lines to have the mouse position
        // be placed within the map.
        className: 'custom-mouse-position',
        target: document.getElementById('mouse-position'),
        undefinedHTML: '&nbsp;'
    });

    //Mapa Satelital
    var raster = new ol.layer.Tile({
        opacity: 0.7,
        proyection: 'EPSG:32719',
        source: new ol.source.XYZ({
            attributions: ['Powered by Esri',
                'Source: Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community'],
            attributionsCollapsible: false,

 ");
            WriteLiteral(@"           url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
            proyection: 'EPSG:32719',
            maxZoom: 23

        })
    });

    //imagen Satelital (Se debe modificar para ir cambiando por fecha)
    var landsat = new ol.layer.Tile({
        opacity: 0.7,
        proyection: 'EPSG:32719',
        source: new ol.source.TileWMS({
            url: 'http://localhost:8080/geoserver/localhost/wms?',
            params: { 'LAYERS': 'localhost:LC08_L1TP_233086_20131005_20170429_01_T1_sr_ndvi' },
            proyection: 'EPSG:32719',
            serverType: 'geoserver',

            // Countries have transparency, so do not fade tiles:
            transition: 0
        })
    });

    var tiff_de_geos = new ol.layer.Tile({
        proyection: 'EPSG:32719',
        source: new ol.source.TileWMS({
            url: 'http://localhost:8080/geoserver/localhost/wms?',
            params: { 'LAYERS': 'localhost:LC08_L1TP_233086_");
            WriteLiteral(@"20131005_20170429_01_T1_sr_ndvi', 'FORMAT': 'image/tiff' },
            proyection: 'EPSG:32719',
            serverType: 'geoserver'
        })
    });

    var projectionSelect = document.getElementById('projection');
    projectionSelect.addEventListener('change', function (event) {
        mousePositionControl.setProjection(event.target.value);
    });

    var precisionInput = document.getElementById('precision');
    precisionInput.addEventListener('change', function (event) {
        var format = ol.coordinate.createStringXY(event.target.valueAsNumber);
        mousePositionControl.setCoordinateFormat(format);
    });

    //Mapa plano con calles
    var street = new ol.layer.Tile({ source: new ol.source.OSM() });



    //Vector para guardar los poligonos.
    var source = new ol.source.Vector({
        proyection: 'EPSG:3857'
    })

    //capa para agregar los vectores
    var vector = new ol.layer.Vector({
        source: source,
        proyection: 'EPSG:3857'
    })");
            WriteLiteral(@";


    //""Constructor"" del elemento mapa, Se le agregan las capas de satelite, imagen, y calle. Asi como tambien el vector
    // donde son guardados los poligonos.
    var map = new ol.Map({
        pixelRatio: 1,
        layers: [street, raster, landsat, vector],
        target: 'map',
        controls: ol.control.defaults().extend([mousePositionControl]),
        view: new ol.View({
            proyection: 'EPSG:32719',
            center: [-71, -35],
            zoom: 5
        })
    });

    var typeSelect = document.getElementById('type');
    var sumaaa;
    var geo;

    var ondrawend = async function (e) {
        console.log(e.feature.getGeometry());
        var allfeat = vector.getSource().getFeatures();
        console.log(""allfeats: "", allfeat);
    };

    var draw; // global so we can remove it later
    function addInteraction() {
        var value = typeSelect.value;
        if (value !== 'None') {
            draw = new ol.interaction.Draw({
                ");
            WriteLiteral(@"source: source,
                type: typeSelect.value
            });
            draw.on('drawend', ondrawend);
            map.addInteraction(draw);
            console.log(""hallo"");
        }
    }

    function removeInteraction() {
        map.removeInteraction(draw);
    }

    // Habilita/desabilida los botones
    function disableB2() {
        document.getElementById(""b1"").disabled = false;
        document.getElementById(""b2"").disabled = true;
    }
    function disableB1() {
        document.getElementById(""b1"").disabled = true;
        document.getElementById(""b2"").disabled = false;
    }


    function deletePoly() {

    }


    /**
        * Handle change event.
        */
    typeSelect.onchange = function () {
        map.removeInteraction(draw);
        addInteraction();
    };


    /*
        *
        * TEST
        *
        * */


    //var GjsonPar = new ol.Format.GeoJSON();

    //var polyJson = GjsonPar.write(vector.features);


    ");
            WriteLiteral(@"async function printpoly() {
        var interaction = vector.getSource().getFeatures();
        interaction.forEach(async function (feature) {
            //var newgeo = feature;
            //newgeo.getGeometry().transform('EPSG:3857', ""EPSG:32719"");
            var newfeat = feature.clone();
            var transform = newfeat.getGeometry().transform('EPSG:3857', ""EPSG:32719"");
            var coord = newfeat.getGeometry().getCoordinates();

            //var workspace = layer.params.LAYERS.split(':');
            // var downloadurl = ""http://localhost:8080/geoserver/"" + workspace[0] + ""/wcs?service=WCS&version=2.0.1&request=GetCoverage&CoverageId="" + layer.params.LAYERS + ""&format=image/tiff""
            //window.open(downloadurl);


            console.log(""poligono: "" + coord);
            //coord = ol.proj.transform(coord, 'EPSG:32719', 'EPSG:4326');

            const img = await geoblaze.load(""http://localhost:8080/geoserver/localhost/wms?service=WMS&version=1.1.0&request=GetMap&laye");
            WriteLiteral(@"rs=localhost:LC08_L1TP_233086_20131005_20170429_01_T1_sr_ndvi&bbox=126584.999972549,5732785.00003017,355814.99997254903,5963515.00003017&width=763&height=768&srs=EPSG:32719&format=image/geotiff"");
            //const img = await geoblaze.load(""http://localhost:8080/geoserver/localhost/wms?service=WMS&version=1.1.0&request=GetMap&layers=localhost:Ts&bbox=64051.700592833,4191661.52438661,195811.700592833,4308241.52438661&width=768&height=679&srs=EPSG:32611&format=image/geotiff"");
            var sumaaa = geoblaze.sum(img);
            console.log(""sm original: "", sumaaa);
            var lonlat = [223885.153852, 5786947.319458];
            var sum = geoblaze.identify(img, lonlat);
            console.log(""sm crop: "", sum);
            console.log(""img raster: "", img);

            var swissCoord = ol.proj.transform(lonlat, 'EPSG:4326', 'EPSG:32719');
            console.log(""transform: "", swissCoord)
            swissCoord = ol.proj.transform(lonlat, 'EPSG:32719', 'EPSG:4326');
            console.");
            WriteLiteral(@"log(""transform 4326: "", swissCoord)
            swissCoord = ol.proj.transform(lonlat, 'EPSG:4326', 'EPSG:32719');
            console.log(""transform 4326 -> 32719: "", swissCoord)
            swissCoord = ol.proj.transform(lonlat, 'EPSG:32719', 'EPSG:3857');
            console.log(""transform 3857: "", swissCoord)

            var suma = geoblaze.sum(img, coord);
            console.log(""sm: "", suma);
            Swal.fire({
                icon: 'success',
                title: 'Resultado',
                text: 'El valor del indicador seleccionado contenido en el pol√≠gono es: ' + suma
            })
            console.log(""sm: "", suma);

        });
    }

</script>



<style>
    * {
        box-sizing: border-box;
    }

    .map {
        height: 70%;
        width: 100%;
    }
</style>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
